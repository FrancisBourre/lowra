/** * Copyright the original author or authors. *  * Licensed under the MOZILLA PUBLIC LICENSE, Version 1.1 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *      http://www.mozilla.org/MPL/MPL-1.1.html *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package lowra.plugins.utils.tracking.strategy {	import com.bourre.ioc.bean.BeanFactory;
	import com.bourre.ioc.parser.ContextNodeNameList;
	import com.google.analytics.GATracker;
	import com.google.analytics.core.Utils;
	
	import flash.display.DisplayObject;	
	/**	 * Tracking strategy using <strong>GAForFlash</strong> Google Analytic 	 * Flash library.	 * 	 * <p>More information on <strong>GAForFlash</strong> here :	 * <ul>	 * 	<li><a href='http://code.google.com/p/gaforflash/' target='_blank'>Google code</a><br /></li>	 * 	<li><a href='http://code.google.com/intl/fr/apis/analytics/docs/flashTrackingIntro.html' target='_blank'>Google Analytic doc</a></li>	 * </ul>	 * </p>	 * 	 * @author Romain Ecarnot	 */	public class GATracking extends AbstractTrackingStrategy	{		//--------------------------------------------------------------------		// Private properties		//--------------------------------------------------------------------		private var _ga : GATracker;				//--------------------------------------------------------------------		// Public API		//--------------------------------------------------------------------				/**		 * Creates plugin.		 * 		 * @param id	Google account ID		 * @param mode	Tracker type "Bridge" or "AS3"		 * @param debug	Visual debug state		 */		public function GATracking( id : String, mode : String = "AS3", debug : Boolean = false )		{			super( getConstructorAccess( ) );						if( Utils.validateAccount( id ) )			{				_ga = new GATracker( BeanFactory.getInstance( ).locate( ContextNodeNameList.ROOT ) as DisplayObject, id, mode, debug );			}			else  cancel( );		}						//--------------------------------------------------------------------		// Protected methods		//--------------------------------------------------------------------					/**		 * @inheritDoc		 */		override protected function process( tag : String ) : void		{			_ga.trackPageview( tag );		}	}}